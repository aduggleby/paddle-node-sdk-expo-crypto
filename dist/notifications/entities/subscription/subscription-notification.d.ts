import { BillingDetailsNotification, ImportMetaNotification, SubscriptionDiscountNotification, SubscriptionItemNotification, SubscriptionScheduledChangeNotification, SubscriptionTimePeriodNotification, TimePeriodNotification } from '../index';
import { type CollectionMode, type CurrencyCode, type SubscriptionStatus } from '../../../enums';
import { type ISubscriptionNotificationResponse } from '../../types';
import { type CustomData } from '../../../entities';
export declare class SubscriptionNotification {
    readonly id: string;
    readonly status: SubscriptionStatus;
    readonly transactionId: string | null;
    readonly customerId: string;
    readonly addressId: string;
    readonly businessId: string | null;
    readonly currencyCode: CurrencyCode;
    readonly createdAt: string;
    readonly updatedAt: string;
    readonly startedAt: string | null;
    readonly firstBilledAt: string | null;
    readonly nextBilledAt: string | null;
    readonly pausedAt: string | null;
    readonly canceledAt: string | null;
    readonly discount: SubscriptionDiscountNotification | null;
    readonly collectionMode: CollectionMode;
    readonly billingDetails: BillingDetailsNotification | null;
    readonly currentBillingPeriod: SubscriptionTimePeriodNotification | null;
    readonly billingCycle: TimePeriodNotification;
    readonly scheduledChange: SubscriptionScheduledChangeNotification | null;
    readonly items: SubscriptionItemNotification[];
    readonly customData: CustomData | null;
    readonly importMeta: ImportMetaNotification | null;
    constructor(subscription: ISubscriptionNotificationResponse);
}
